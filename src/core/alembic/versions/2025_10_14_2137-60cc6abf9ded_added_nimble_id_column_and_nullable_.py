"""added nimble_id column and nullable property

Revision ID: 60cc6abf9ded
Revises: f14b00edd00c
Create Date: 2025-10-14 21:37:37.007382

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "60cc6abf9ded"
down_revision: Union[str, Sequence[str], None] = "f14b00edd00c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("contacts", sa.Column("nimble_id", sa.String(), nullable=True))
    op.alter_column("contacts", "first_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("contacts", "last_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("contacts", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "contacts",
        "description",
        existing_type=sa.VARCHAR(),
        type_=sa.Text(),
        nullable=True,
    )
    op.drop_constraint(op.f("uq_contacts_email"), "contacts", type_="unique")
    op.drop_index(op.f("ix_search"), table_name="contacts", postgresql_using="gin")
    op.create_index(
        "ix_search",
        "contacts",
        [
            sa.literal_column(
                "to_tsvector('english', coalesce(first_name, '') || ' ' || coalesce(last_name, '') || ' ' || coalesce(email, '') || ' ' || coalesce(description, ''))"
            )
        ],
        unique=False,
        postgresql_using="gin",
    )
    op.create_unique_constraint(
        op.f("uq_contacts_nimble_id"), "contacts", ["nimble_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_contacts_nimble_id"), "contacts", type_="unique")
    op.drop_index("ix_search", table_name="contacts", postgresql_using="gin")
    op.create_index(
        op.f("ix_search"),
        "contacts",
        [
            sa.literal_column(
                "to_tsvector('english'::regconfig, (((((COALESCE(first_name, ''::character varying)::text || ' '::text) || COALESCE(last_name, ''::character varying)::text) || ' '::text) || COALESCE(email, ''::character varying)::text) || ' '::text) || COALESCE(description, ''::character varying)::text)"
            )
        ],
        unique=False,
        postgresql_using="gin",
    )
    op.create_unique_constraint(
        op.f("uq_contacts_email"),
        "contacts",
        ["email"],
        postgresql_nulls_not_distinct=False,
    )
    op.alter_column(
        "contacts",
        "description",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column("contacts", "email", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("contacts", "last_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "contacts", "first_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("contacts", "nimble_id")
    # ### end Alembic commands ###
